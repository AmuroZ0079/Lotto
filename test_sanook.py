#!/usr/bin/env python3
"""
‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook Lotto
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import LotteryScraper
import logging

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_sanook_scraping():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook"""
    print("=" * 60)
    print("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook Lotto")
    print("=" * 60)
    
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á scraper
        scraper = LotteryScraper()
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook
        print("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Sanook...")
        result = scraper.scrape_lottery_result()
        
        if result:
            print("\n‚úÖ ‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            print("\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:")
            print("-" * 40)
            for key, value in result.items():
                if value:
                    print(f"{key}: {value}")
            print("-" * 40)
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
            if result.get('first_prize'):
                print(f"\nüéØ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1: {result['first_prize']}")
            else:
                print("\n‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1")
                
            if result.get('draw_number'):
                print(f"üìÖ ‡∏á‡∏ß‡∏î: {result['draw_number']}")
            else:
                print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏á‡∏ß‡∏î")
                
        else:
            print("\n‚ùå ‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!")
            print("\n‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:")
            print("- ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á")
            print("- ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á")
            print("- ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏≠‡∏≠‡∏Å")
            print("- ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á CSS selectors")
            
    except Exception as e:
        print(f"\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        logger.error(f"Error in test_sanook_scraping: {e}")

def test_sanook_direct():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å Sanook"""
    print("\n" + "=" * 60)
    print("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å Sanook")
    print("=" * 60)
    
    try:
        import requests
        from bs4 import BeautifulSoup
        
        url = "https://news.sanook.com/lotto/"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        
        print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á: {url}")
        response = requests.get(url, headers=headers, timeout=15)
        
        if response.status_code == 200:
            print("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            soup = BeautifulSoup(response.content, 'html.parser')
            
            # ‡∏´‡∏≤ link ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏á‡∏ß‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            latest_links = soup.find_all('a', href=lambda x: x and '‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏ß‡∏¢' in x and '‡∏á‡∏ß‡∏î' in x)
            
            print(f"\n‡∏û‡∏ö link ‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà: {len(latest_links)} ‡∏•‡∏¥‡∏á‡∏Å‡πå")
            
            for i, link in enumerate(latest_links[:3]):  # ‡πÅ‡∏™‡∏î‡∏á 3 ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏£‡∏Å
                href = link.get('href')
                text = link.get_text().strip()
                print(f"  {i+1}. {text} -> {href}")
            
            if latest_links:
                # ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏á‡∏ß‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                latest_url = latest_links[0].get('href')
                if latest_url.startswith('/'):
                    latest_url = 'https://news.sanook.com' + latest_url
                
                print(f"\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà: {latest_url}")
                response2 = requests.get(latest_url, headers=headers, timeout=15)
                
                if response2.status_code == 200:
                    soup2 = BeautifulSoup(response2.content, 'html.parser')
                    
                    # ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å
                    import re
                    numbers = re.findall(r'\d{6}', soup2.get_text())
                    print(f"\n‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å: {len(numbers)} ‡∏ï‡∏±‡∏ß")
                    
                    if numbers:
                        print("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏û‡∏ö:")
                        for i, num in enumerate(numbers[:10]):  # ‡πÅ‡∏™‡∏î‡∏á 10 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
                            print(f"  {i+1}. {num}")
                    else:
                        print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å")
                        print("\n‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö (‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å):")
                        print(soup2.get_text()[:500])
                else:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ: {response2.status_code}")
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö link ‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà")
                
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

if __name__ == "__main__":
    print("‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook Lotto")
    print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print("1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ LotteryScraper")
    print("2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á")
    
    choice = input("\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1 ‡∏´‡∏£‡∏∑‡∏≠ 2): ").strip()
    
    if choice == "1":
        test_sanook_scraping()
    elif choice == "2":
        test_sanook_direct()
    else:
        print("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        sys.exit(1)
