#!/usr/bin/env python3
"""
‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Supabase)
"""

import requests
from bs4 import BeautifulSoup
import re
from datetime import date
import logging

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_sanook_direct():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á"""
    print("=" * 60)
    print("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook Lotto (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢)")
    print("=" * 60)
    
    try:
        url = "https://news.sanook.com/lotto/"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á: {url}")
        response = requests.get(url, headers=headers, timeout=15)
        
        if response.status_code == 200:
            print("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            soup = BeautifulSoup(response.content, 'html.parser')
            
            # ‡∏´‡∏≤ link ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏á‡∏ß‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            latest_links = soup.find_all('a', href=lambda x: x and '‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏ß‡∏¢' in x and '‡∏á‡∏ß‡∏î' in x)
            
            print(f"\n‡∏û‡∏ö link ‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà: {len(latest_links)} ‡∏•‡∏¥‡∏á‡∏Å‡πå")
            
            if latest_links:
                # ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏á‡∏ß‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                latest_url = latest_links[0].get('href')
                if latest_url.startswith('/'):
                    latest_url = 'https://news.sanook.com' + latest_url
                
                print(f"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà: {latest_url}")
                response2 = requests.get(latest_url, headers=headers, timeout=15)
                
                if response2.status_code == 200:
                    soup2 = BeautifulSoup(response2.content, 'html.parser')
                    
                    # ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å
                    numbers = re.findall(r'\d{6}', soup2.get_text())
                    print(f"\n‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å: {len(numbers)} ‡∏ï‡∏±‡∏ß")
                    
                    if numbers:
                        print("\nüéØ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏û‡∏ö:")
                        for i, num in enumerate(numbers[:15]):  # ‡πÅ‡∏™‡∏î‡∏á 15 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
                            print(f"  {i+1:2d}. {num}")
                        
                        # ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
                        if len(numbers) >= 1:
                            print(f"\nüèÜ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1: {numbers[0]}")
                        if len(numbers) >= 3:
                            print(f"ü•à ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 2: {numbers[1]}, {numbers[2]}")
                        if len(numbers) >= 6:
                            print(f"ü•â ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 3: {numbers[3]}, {numbers[4]}, {numbers[5]}")
                        if len(numbers) >= 10:
                            print(f"üèÖ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 4: {numbers[6]}, {numbers[7]}, {numbers[8]}, {numbers[9]}")
                        if len(numbers) >= 13:
                            print(f"üéñÔ∏è ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 5: {numbers[10]}, {numbers[11]}, {numbers[12]}")
                    else:
                        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å")
                        print("\n‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö (‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å):")
                        print(soup2.get_text()[:500])
                else:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏î‡πâ: {response2.status_code}")
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö link ‡∏ú‡∏•‡∏•‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà")
                print("\n‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö (‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å):")
                print(soup.get_text()[:500])
                
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏î‡πâ: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        logger.error(f"Error in test_sanook_direct: {e}")

def test_with_sample_data():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á"""
    print("\n" + "=" * 60)
    print("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á")
    print("=" * 60)
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    sample_data = {
        'draw_date': '2024-01-16',
        'draw_number': '1/2567',
        'first_prize': '123456',
        'second_prize_1': '234567',
        'second_prize_2': '345678',
        'third_prize_1': '456789',
        'third_prize_2': '567890',
        'third_prize_3': '678901',
        'fourth_prize_1': '789012',
        'fourth_prize_2': '890123',
        'fourth_prize_3': '901234',
        'fourth_prize_4': '012345',
        'fifth_prize_1': '111111',
        'fifth_prize_2': '222222',
        'fifth_prize_3': '333333'
    }
    
    print("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:")
    print("-" * 40)
    for key, value in sample_data.items():
        if value:
            print(f"{key}: {value}")
    print("-" * 40)

if __name__ == "__main__":
    print("‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢")
    print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print("1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ scrap ‡∏à‡∏≤‡∏Å Sanook")
    print("2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á")
    
    choice = input("\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1 ‡∏´‡∏£‡∏∑‡∏≠ 2): ").strip()
    
    if choice == "1":
        test_sanook_direct()
    elif choice == "2":
        test_with_sample_data()
    else:
        print("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        exit(1)
